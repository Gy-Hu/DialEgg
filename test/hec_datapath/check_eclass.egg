(include "src/base.egg")

;; Define operations
(function arith_constant (AttrPair Type) Op)
(function arith_andi (Op Op Type) Op)
(function arith_ori (Op Op Type) Op)
(function arith_xori (Op Op Type) Op)

;; OPS HERE ;;

;; RULES HERE ;;
(ruleset demorgan)

;; De Morgan's law
(rewrite
    (arith_xori 
        (arith_andi ?a ?b (I1)) 
        (arith_constant (NamedAttr "value" (IntegerAttr -1 (I1))) (I1)) 
        (I1))
    (arith_ori 
        (arith_xori ?a (arith_constant (NamedAttr "value" (IntegerAttr -1 (I1))) (I1)) (I1)) 
        (arith_xori ?b (arith_constant (NamedAttr "value" (IntegerAttr -1 (I1))) (I1)) (I1)) 
        (I1))
    :ruleset demorgan
)

;; Run saturation
(run-schedule (saturate demorgan))

;; EXTRACTS HERE ;;
;; Extract both expressions to check if they're equivalent
(extract op4)  ; NAND result
(extract op7)  ; OR result
;; Check if they're in the same e-class
(check (= op4 op7)) 